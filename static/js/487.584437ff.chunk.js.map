{"version":3,"file":"static/js/487.584437ff.chunk.js","mappings":"+OAAO,IAAMA,EAAW,+BACXC,EAAS,2CACTC,EAAkB,sBAClBC,EAAgB,S,wJCGd,SAASC,IAEvB,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACT,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAoBE,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAGE,IAAMM,EAAY,mCAAG,sGAEdC,EAFc,UAELZ,EAAAA,IAFK,OAEMG,EAAAA,IAFN,OAEsBE,EAFtB,oBAEwCJ,EAAAA,GAFxC,4BAGCY,EAAAA,EAAAA,IAAUD,GAHX,OAGdE,EAHc,OAIvBC,QAAQC,IAAIF,EAAOG,KAAKC,MACvBT,EAAYK,EAAOG,KAAKC,MALF,gDAOtBH,QAAQC,IAAR,MAPsB,yDAAH,qDAWpBL,GAZC,CAaF,GAAE,CAACN,KAGF,0BAEE,wBAEIG,EAASW,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,QAAhC,OACX,0BACLF,IAAgB,gBACbG,IAAG,yCAAoCH,GACjCI,IAAG,UAAKH,GACRI,OAAO,MACPC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cACxBA,EAAcC,QAAU,KAChBD,EAAcJ,IAAM,2FAE7B,KAEG,uBAAIF,MAXWC,EADE,OAkBtB,C","sources":["Constants/Constants.js","Pages/MoviesDetails/Cast/Cast.jsx"],"sourcesContent":["export const BASE_URL = \"https://api.themoviedb.org/3\";\nexport const MY_KEY = \"api_key=102d4305e0abdbf0fd48836d5abb1978\";\nexport const TRENDING_MOVIES = \"/trending/movie/day\";\nexport const MOVIE_DETAILS = \"/movie/\";\n\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&query=bc&page=1&include_adult=false","import React from 'react'\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { BASE_URL, MY_KEY, MOVIE_DETAILS } from \"Constants/Constants\";\n\nexport default function Cast() {\n\n const { filmId } = useParams();\nconst [filmCast, setFilmCast] = useState([]);\n\n  useEffect(() => {\n    if (!filmId) {\n      return\n    }\n      const movieDetails = async () => {\n   try {\n       const ulr = `${BASE_URL}${MOVIE_DETAILS}${filmId}/credits?${MY_KEY}&language=en-US`;\n       const movies = await axios.get(ulr);\n    console.log(movies.data.cast)\n     setFilmCast(movies.data.cast)\n   } catch (error) {\n     console.log(error)\n      }\n    }\n    \n    movieDetails();\n  }, [filmId])\n\n  return (\n    <div>\n  \n      <ul>\n        {\n          filmCast.map(({ profile_path, original_name, cast_id }) => (\n            <li key={cast_id}>\n      {profile_path && <img\n          src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={`${original_name}`}\n                height='100'\n                onError={({ currentTarget }) => {\n    currentTarget.onerror = null; // prevents looping\n            currentTarget.src = \"https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-\";\n           \n  }}\n      />}\n      <p>{original_name}</p>\n            </li>\n              ))}  \n      </ul>\n    </div>\n  )\n}\n"],"names":["BASE_URL","MY_KEY","TRENDING_MOVIES","MOVIE_DETAILS","Cast","filmId","useParams","useState","filmCast","setFilmCast","useEffect","movieDetails","ulr","axios","movies","console","log","data","cast","map","profile_path","original_name","cast_id","src","alt","height","onError","currentTarget","onerror"],"sourceRoot":""}